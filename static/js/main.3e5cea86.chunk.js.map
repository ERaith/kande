{"version":3,"sources":["components/Hero.js","components/GoogleForm.js","components/About.js","components/EventLocation.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Hero","className","GoogleForm","id","src","width","height","frameborder","marginheight","marginwidth","scrolling","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","About","Box","sx","flexGrow","Grid","container","item","xs","md","EventLocation","TabPanel","props","children","value","index","other","role","hidden","aria-labelledby","p","Typography","a11yProps","BasicTabs","React","setValue","class","borderBottom","borderColor","Tabs","onChange","event","newValue","aria-label","Tab","label","App","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3e5cea86.chunk.js","sourcesContent":["import React from 'react'\n\n\nexport const Hero = () => {\n  return (\n    <article className = \"hero grey darken-4\">\n      <h3>\n        \n      </h3>\n    </article>\n  )\n  \n}\n\nexport default Hero;","import React from \"react\";\n\nexport const GoogleForm = () => {\n  return (\n    <article className=\"about\" id=\"about\">\n        <iframe \n        src=\"https://docs.google.com/forms/d/e/1FAIpQLSd4rQR9CEfmz9UFotz9rMgsUR2yW49srg5HfWWG8JXdcFa_2g/viewform?embedded=true\" \n        width=\"800\" \n        height=\"1225\" \n        frameborder=\"0\" \n        marginheight=\"0\" \n        marginwidth=\"0\"\n        scrolling=\"no\"\n        >Loadingâ€¦</iframe>\n    </article>\n  );\n};\n\nexport default GoogleForm;\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\n\nexport const About = () => {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={6} md={8}>\n          <Item>\n            We met one fateful Friday night back in 2009 in Lawrence, KS.  \n            We immediately bonded over our interest in the night sky \n            and started showing each other constellations and stars.  \n            Then when Erik asked Kelsey out for Chinese for our first date, \n\n          </Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>Pic of Chinese</Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>Skokie House Pic</Item>\n        </Grid>\n        <Grid item xs={6} md={8}>\n          <Item>   \n            After having a long distance relationship all of our college years, \n            we moved to Skokie to start our professional lives and learn how to adult together. \n            </Item>\n        </Grid>\n        <Grid item xs={6} md={8}>\n          <Item>\n            In 2017, we decided to shake things up and moved to Denver to explore the west. \n            We fell in love with the mountains and have decided to make a home here ever since.  \n            In early 2021, we added Maude, our cat, to our little family.  \n            A few months later, we decided we better make the family official and decided to invite all our \n            friends and families to celebrate our love together.  Cheers!\n          </Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>Pictures of Mountains</Item>\n        </Grid>\n\n      </Grid>\n    </Box>\n  );\n};\n\nexport default About;\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\n\nexport const EventLocation = () => {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={6} md={8}>\n          <Item>\n          Location: \nDenver Botanic Garden Chatfield Farms -- Green Farm Barn\n8500 West Deer Creek Canyon Road\nLittleton CO 80128\nhttps://www.botanicgardens.org/chatfield-farms\n \n\n          </Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>\n              Timeline:\nWedding start time:\nCocktail hour:\nDinner:\nDancing:\nEnd time: 11:00 PM\n\n          </Item>\n        </Grid>\n\n\n      </Grid>\n    </Box>\n  );\n};\n\nexport default EventLocation;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport GoogleForm from './GoogleForm';\nimport About from './About';\nimport EventLocation from './EventLocation';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function BasicTabs() {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%' }} class=\"nav-position\">\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }} class=\"nav\" >\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n          <Tab label=\"Event Location and Timeline\" {...a11yProps(0)} />\n          <Tab label=\"RSVP\" {...a11yProps(1)} />\n          <Tab label=\"Lodging Information\" {...a11yProps(2)} />\n          <Tab label=\"Local Activities\" {...a11yProps(3)} />\n          <Tab label=\"Registry\" {...a11yProps(4)} />\n          <Tab label=\"About the Couple\" {...a11yProps(5)} />\n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n        <EventLocation/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <GoogleForm/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Item Three\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Item Three\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        Item Three\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        <About/>\n      </TabPanel>\n    </Box>\n  );\n}\n","import React, { Component } from \"react\";\nimport Hero from \"./components/Hero\"\nimport \"./sass/App.scss\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport TabPanel from './components/Navigation';\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route exact path=\"/\" component={TabPanel}/>\n        <Route exact path=\"/\" component={Hero}/>\n\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/App.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n      <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}