{"version":3,"sources":["assets/github-logo.svg","assets/gmail-logo.svg","assets/linkedin-logo.svg","components/Navigation.js","components/About.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","className","class","href","About","id","Footer","target","src","githubLogo","alt","gmailLogo","linkedinLogo","App","history","createHistory","path","component","exact","Component","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,yMCsB5BC,EAnBI,WACjB,OACE,yBAAKC,UAAU,4CACb,yBAAKC,MAAM,OACT,yBAAKA,MAAM,gBACT,qEAEF,yBAAKA,MAAM,gBACT,wBAAIA,MAAM,8BACR,4BACE,uBAAGC,KAAK,sFAAR,gBCSCC,EApBM,WACnB,OACE,6BAASH,UAAU,8BAA8BI,GAAG,SAClD,yBAAKJ,UAAU,qBAEb,yBAAKA,UAAU,cACb,0FACA,6DACA,8DAEF,yBAAKA,UAAU,cACb,k2B,mDCuCKK,EA9CO,WACpB,OACE,4BAAQJ,MAAM,cAAcG,GAAG,WAC7B,yBAAKH,MAAM,aACT,yBAAKA,MAAM,OACT,yBAAKA,MAAM,cACT,wBAAIA,MAAM,cAAV,QACA,uBAAGA,MAAM,4BAAT,+BAIF,yBAAKA,MAAM,wBACT,uBACEA,MAAM,mDACNC,KAAK,kHACLI,OAAO,UAEP,yBAAKC,IAAKC,IAAYR,UAAU,OAAOS,IAAI,gBAL7C,sBAQA,uBAAGR,MAAM,oDACP,yBAAKM,IAAKG,IAAWV,UAAU,OAAOS,IAAI,eAD5C,kBAIA,uBACER,MAAM,qDACNC,KAAK,mDACLI,OAAO,UAEP,yBAAKC,IAAKI,IAAcX,UAAU,OAAOS,IAAI,kBAL/C,gCAeN,yBAAKR,MAAM,oBACT,yBAAKA,MAAM,aAAX,2B,gCCnCaW,E,uKAEjB,OACE,kBAAC,IAAD,CAAQC,QAASC,KACf,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWjB,IAC3B,kBAAC,IAAD,CAAOkB,OAAK,EAACF,KAAK,IAAIC,UAAWb,IAGjC,kBAAC,IAAD,CAAOY,KAAK,IAAIC,UAAWX,S,GARFa,aCCbC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0924e616.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.e7ab06e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/gmail-logo.185bfa52.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-logo.97ce31c8.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = () => {\n  return (\n    <nav className=\"nav-wrapper grey darken-4 header-spacing\">\n      <div class=\"row\">\n        <div class=\"col s6 m6 l6\">\n          <h4>Kelsey and Erik are getting Married!</h4>\n        </div>\n        <div class=\"col s6 m6 l6\">\n          <ul class=\"right hide-on-med-and-down\">\n            <li>\n              <a href=\"https://drive.google.com/file/d/1r5uF5ylc3iBMrDTMSyeQIgcYOZzRFVq6/view?usp=sharing\">Resume</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\n\nexport const About = () => {\n  return (\n    <article className=\"about grey lighten-2 spacer\" id=\"about\">\n      <div className=\"row about-content\">\n\n        <div className=\"col s12 m4\">\n          <h4>Where: 8500 West Deer Creek Canyon Road Littleton CO 80128</h4>\n          <h5>Quick and Dirty Wedding Stuff</h5>\n          <h5>Quick and Dirty Wedding Stuff</h5>\n        </div>\n        <div className=\"col s12 m6\">\n          <p>\n          We met one fateful Friday night back in 2009 in Lawrence, KS.  We immediately bonded over our interest in the night sky and started showing each other constellations and stars.  Then when Erik asked Kelsey out for Chinese for our first date, it was pretty clear that this was going somewhere.  After having a long distance relationship all of our college years, we moved to Skokie to start our professional lives and learn how to adult together. In 2017, we decided to shake things up and moved to Denver to explore the west. We fell in love with the mountains and have decided to make a home here ever since.  In early 2021, we added Maude, our cat, to our little family.  A few months later, we decided we better make the family official and decided to invite all our friends and families to celebrate our love together.  Cheers!\n          </p>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport githubLogo from \"../assets/github-logo.svg\";\nimport gmailLogo from \"../assets/gmail-logo.svg\";\nimport linkedinLogo from \"../assets/linkedin-logo.svg\";\n// import turingLogo from \"../assets/turing-logo.png\";\n\nexport const Footer = () => {\n  return (\n    <footer class=\"page-footer\" id=\"contact\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col l6 s12\">\n            <h5 class=\"white-text\">RSVP</h5>\n            <p class=\"grey-text text-lighten-4\">\n              Something something RSVPs!\n            </p>\n          </div>\n          <div class=\"col l4 offset-l2 s12\">\n            <a\n              class=\"waves-effect waves-light btn-large social github\"\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLSd4rQR9CEfmz9UFotz9rMgsUR2yW49srg5HfWWG8JXdcFa_2g/viewform?usp=sf_link\"\n              target=\"_blank\"\n            >\n              <img src={githubLogo} className=\"logo\" alt=\"github logo\" /> Find\n              me on github\n            </a>\n            <a class=\"waves-effect waves-light btn-large social google\">\n              <img src={gmailLogo} className=\"logo\" alt=\"gmail logo\" /> Get in\n              touch!\n            </a>\n            <a\n              class=\"waves-effect waves-light btn-large social linkedin\"\n              href=\"https://www.linkedin.com/in/erik-raith-8b441969/\"\n              target=\"_blank\"\n            >\n              <img src={linkedinLogo} className=\"logo\" alt=\"linkedin logo\" />\n              Connect to me on linkedin\n            </a>\n            {/* <a class=\"waves-effect waves-light btn-large social linkedin\">\n              <img src={turingLogo} className=\"logo\" alt=\"turing logo\" /> See my\n              Portfolio on Turing Alumms\n            </a> */}\n          </div>\n        </div>\n      </div>\n      <div class=\"footer-copyright\">\n        <div class=\"container\">Â© 2020 Erik Raith</div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Projects from \"./components/Projects\";\nimport Navigation from \"./components/Navigation\";\nimport Hero from \"./components/Hero\";\nimport About from \"./components/About\";\nimport Footer from \"./components/Footer\";\nimport Project from \"./components/Project\";\nimport \"./App.scss\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Router, Route } from 'react-router'\nimport createHistory from 'history/createBrowserHistory'\nexport default class App extends Component {\n  render() {\n    return (\n      <Router history={createHistory }>\n        <Route path=\"/\" component={Navigation}/>\n        <Route exact path=\"/\" component={About}/>\n        {/* <Route exact path=\"/\" component={Projects}/> */}\n        {/* <Route exact path=\"/projects/:id\" component={Project}/> */}\n        <Route path=\"/\" component={Footer}/>\n\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/application.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.Fragment>\n      <App />\n    </React.Fragment>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}